{"version":3,"sources":["clean.js"],"names":["budget","value","description","user","arguments","length","undefined","toLowerCase","spendinglimits","push","addExpense","jonas","log","check","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","el","lim","flag","err","output","_step2","_iterator2","_iteratorNormalCompletion2","limit","slice","console","bigExpenses"],"mappings":"aAAA,IAAMA,OAAS,CACb,CAAEC,MAAO,IAAKC,YAAa,iBAAkBC,KAAM,SADrD,CAAMH,OAAM,GACVE,YAAA,eAAAC,KAAA,SAAEF,CAAAA,MAAO,KAATC,YAAA,uBAAAC,KAAA,SAAcD,CAAAA,MAAAA,IAAaA,YAAA,oBAA3BC,KAAA,SAA6CA,CAAAA,OAAM,KAAAD,YAAA,gBAAAC,KAAA,SADtC,CAEbF,OAAA,GAAAC,YAAA,WAAAC,KAAA,WAAEF,CAAAA,OAAF,IAAAC,YAAA,UAAAC,KAAA,WAAcD,CAAAA,OAAAA,KAAaA,YAA3B,gBAAAC,KAAA,UACEF,eAAF,CAAeC,MAAAA,KAAqCC,QAAM,KAC5CD,WAAa,SAAAD,EAA3BC,EAA2B,GAA3B,IAAAC,EAAA,EAAAC,UAAAC,aAAAC,IAA2B,EAAA,EAA3B,QAJaH,EAKbA,EAAAI,cAE2CN,IAA3CO,eAAAL,GAAAK,eAAAL,GAAA,IACAH,OAAAS,KAAA,CAAAR,OAAAA,EAAAC,YAAAA,EAAAC,KAAAA,KAA8CA,WAAM,GAAA,YAApDO,WARF,IAAA,qBAAA,WAWAA,WAAMF,IAAAA,QAAiB,OACrBG,QAAKC,IAAEZ,QADc,IAAvBa,MAAA,WAAA,IAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAAV,EAAA,IA4BE,IAAA,IAAAW,EAAAC,EAAiBlB,OAAjBmB,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAyB,CAAA,IAAdS,EAAcN,EAAAhB,MAvBrBS,OAAAA,EACJc,EAD+CrB,eAAgBoB,EAAApB,MAC/DK,eAAAe,EAAApB,MAIA,EAGAoB,EAAAtB,OAAAuB,IACAD,EAAAE,KAAA,UAdF,MAAAC,GAAAX,GAAA,EAAAC,EAAAU,EAAA,QAAA,IAAAZ,GAAA,MAAAI,EAAA,QAAAA,EAAA,SAAA,QAAA,GAAAH,EAAA,MAAAC,KAkBEH,QACgBZ,QAAAA,IAAKD,QAAoCG,IAAAA,YAAMA,SAAAA,GAAjD,IAAZwB,EAAA,GAA6DxB,GAAAA,EAAAA,GAAAA,EAAAA,OAAAA,EAAAA,IAC9D,IAAA,IAAAyB,EAAAC,EAAA7B,OAAAmB,OAAAC,cAAAU,GAAAF,EAAAC,EAAAR,QAAAC,MAAAQ,GAAA,EAAA,CAAA,IAAAP,EAAAK,EAAA3B,MAfHsB,EAAAtB,QAAA8B,IA4CMJ,GAAUJ,EAAGrB,YAAY8B,OAAO,GAAK,QA9BsB7B,MAAAA,GAAAA,GAAAA,EAAAA,EAAAA,EAAAA,QAAAA,IAAAA,GAAAA,MAAAA,EAAAA,QAAAA,EAAAA,SAAAA,QAAAA,GAAAA,EAAAA,MAAAA,GAKjEO,EAAWiB,EAAKK,MAAN,GAAe,GACzBC,QAAQrB,IAAIZ,IAEZkC,YAAc","file":"clean.min.js","sourcesContent":["const budget = [\n  { value: 250, description: 'Sold old TV üì∫', user: 'jonas' },\n  { value: -45, description: 'Groceries ü•ë', user: 'jonas' },\n  { value: 3500, description: 'Monthly salary üë©‚Äçüíª', user: 'jonas' },\n  { value: 300, description: 'Freelancing üë©‚Äçüíª', user: 'jonas' },\n  { value: -1100, description: 'New iPhone üì±', user: 'jonas' },\n  { value: -20, description: 'Candy üç≠', user: 'matilda' },\n  { value: -125, description: 'Toys üöÇ', user: 'matilda' },\n  { value: -1800, description: 'New Laptop üíª', user: 'jonas' },\n];\n\nconst spendinglimits = {\n  jonas: 1500,\n  matilda: 100,\n};\n\nconst addExpense = function (value, description, user = 'jonas') {\n  // if (!user) user = 'jonas';\n  user = user.toLowerCase();\n\n  //let lim;\n  // if (spendinglimits[user]) {\n  //   lim = spendinglimits[user];\n  // } else {\n  //   lim = 0;\n  // }\n\n  const limit = spendinglimits[user] ? spendinglimits[user] : 0;\n\n  if (value <= limit) {\n    budget.push({ value: -value, description: description, user: user });\n  }\n};\naddExpense(10, 'Pizza üçï');\naddExpense(100, 'Going to movies üçø', 'Matilda');\naddExpense(200, 'Stuff', 'Jay');\nconsole.log(budget);\n\nconst check = function () {\n  for (const el of budget) {\n    let lim;\n    if (spendinglimits[el.user]) {\n      lim = spendinglimits[el.user];\n    } else {\n      lim = 0;\n    }\n\n    if (el.value < -lim) {\n      el.flag = 'limit';\n    }\n  }\n};\ncheck();\n\nconsole.log(budget);\n\nconst bigExpenses = function (limit) {\n  let output = '';\n  for (const el of budget) {\n    if (el.value <= -limit) {\n      output += el.description.slice(-2) + ' / '; // Emojis are 2 chars\n    }\n  }\n  output = output.slice(0, -2); // Remove last '/ '\n  console.log(output);\n};\nbigExpenses(1000);\n"]}